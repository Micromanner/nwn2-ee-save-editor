# Generated by Django 5.0.1 on 2025-07-24 01:39

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appearance',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('string_ref', models.CharField(blank=True, default='', help_text='STRING_REF', max_length=32)),
                ('bodytype', models.IntegerField(default=0, help_text='BodyType')),
                ('segments', models.IntegerField(default=0, help_text='Segments')),
                ('nwn2_scale_x', models.IntegerField(default=0, help_text='NWN2_Scale_X')),
                ('nwn2_scale_y', models.FloatField(default=0.0, help_text='NWN2_Scale_Y')),
                ('nwn2_scale_z', models.FloatField(default=0.0, help_text='NWN2_Scale_Z')),
                ('animationspeed', models.FloatField(default=0.0, help_text='AnimationSpeed')),
                ('nwn2_model_body', models.IntegerField(default=0, help_text='NWN2_Model_Body')),
                ('nwn2_model_helm', models.CharField(blank=True, default='', help_text='NWN2_Model_Helm', max_length=32)),
                ('nwn2_model_head', models.CharField(blank=True, default='', help_text='NWN2_Model_Head', max_length=32)),
                ('nwn2_model_hair', models.CharField(blank=True, default='', help_text='NWN2_Model_Hair', max_length=32)),
                ('nwn2_head_skeleton', models.CharField(blank=True, default='', help_text='NWN2_Head_Skeleton', max_length=32)),
                ('nwn2_skeleton_file', models.CharField(blank=True, default='', help_text='NWN2_Skeleton_File', max_length=32)),
                ('nwn2_accessorysize', models.CharField(blank=True, default='', help_text='NWN2_AccessorySize', max_length=32)),
                ('nwn2_accessorytype', models.IntegerField(default=0, help_text='NWN2_AccessoryType')),
                ('toolsetusestubmodel', models.CharField(blank=True, default='', help_text='ToolsetUseStubModel', max_length=32)),
                ('mount', models.IntegerField(default=0, help_text='Mount')),
                ('name', models.IntegerField(default=0, help_text='NAME')),
                ('race', models.CharField(blank=True, default='', help_text='RACE', max_length=32)),
                ('envmap', models.CharField(blank=True, default='', help_text='ENVMAP', max_length=32)),
                ('nwn2_bloodtype', models.CharField(blank=True, default='', help_text='NWN2_BLOODTYPE', max_length=32)),
                ('modeltype', models.IntegerField(default=0, help_text='MODELTYPE')),
                ('weaponvisualscale', models.CharField(blank=True, default='', help_text='WEAPONVISUALSCALE', max_length=32)),
                ('weaponattackdistancescale', models.BooleanField(default=False, help_text='WEAPONATTACKDISTANCESCALE')),
                ('wing_tail_scale', models.IntegerField(default=0, help_text='WING_TAIL_SCALE')),
                ('helmet_scale_m', models.IntegerField(default=0, help_text='HELMET_SCALE_M')),
                ('helmet_scale_f', models.FloatField(default=0.0, help_text='HELMET_SCALE_F')),
                ('moverate', models.FloatField(default=0.0, help_text='MOVERATE')),
                ('walkdist', models.CharField(blank=True, default='', help_text='WALKDIST', max_length=32)),
                ('rundist', models.FloatField(default=0.0, help_text='RUNDIST')),
                ('perspace', models.FloatField(default=0.0, help_text='PERSPACE')),
                ('creperspace', models.FloatField(default=0.0, help_text='CREPERSPACE')),
                ('height', models.FloatField(default=0.0, help_text='HEIGHT')),
                ('hitdist', models.FloatField(default=0.0, help_text='HITDIST')),
                ('prefatckdist', models.FloatField(default=0.0, help_text='PREFATCKDIST')),
                ('targetheight', models.FloatField(default=0.0, help_text='TARGETHEIGHT')),
                ('abortonparry', models.CharField(blank=True, default='', help_text='ABORTONPARRY', max_length=32)),
                ('racialtype', models.IntegerField(default=0, help_text='RACIALTYPE')),
                ('haslegs', models.BooleanField(default=False, help_text='HASLEGS')),
                ('hasarms', models.BooleanField(default=False, help_text='HASARMS')),
                ('portrait', models.IntegerField(default=0, help_text='PORTRAIT')),
                ('sizecategory', models.CharField(blank=True, default='', help_text='SIZECATEGORY', max_length=32)),
                ('perceptiondist', models.BooleanField(default=False, help_text='PERCEPTIONDIST')),
                ('footsteptype', models.IntegerField(default=0, help_text='FOOTSTEPTYPE')),
                ('soundapptype', models.IntegerField(default=0, help_text='SOUNDAPPTYPE')),
                ('headtrack', models.IntegerField(default=0, help_text='HEADTRACK')),
                ('head_arc_h', models.IntegerField(default=0, help_text='HEAD_ARC_H')),
                ('head_arc_v', models.IntegerField(default=0, help_text='HEAD_ARC_V')),
                ('head_name', models.IntegerField(default=0, help_text='HEAD_NAME')),
                ('body_bag', models.CharField(blank=True, default='', help_text='BODY_BAG', max_length=32)),
                ('targetable', models.IntegerField(default=0, help_text='TARGETABLE')),
                ('selection_capsule', models.IntegerField(default=0, help_text='SELECTION_CAPSULE')),
                ('selection_size', models.IntegerField(default=0, help_text='SELECTION_SIZE')),
                ('sef', models.CharField(blank=True, default='', help_text='SEF', max_length=64)),
            ],
            options={
                'verbose_name': 'Appearance',
                'verbose_name_plural': 'Appearances',
                'db_table': 'gamedata_appearance',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='BaseItem',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('invslotwidth', models.IntegerField(default=0, help_text='InvSlotWidth')),
                ('invslotheight', models.IntegerField(default=0, help_text='InvSlotHeight')),
                ('equipableslots', models.CharField(blank=True, default='', help_text='EquipableSlots', max_length=32)),
                ('canrotateicon', models.BooleanField(default=False, help_text='CanRotateIcon')),
                ('modeltype', models.IntegerField(default=0, help_text='ModelType')),
                ('nwn2_anim', models.IntegerField(default=0, help_text='NWN2_Anim')),
                ('itemclass', models.CharField(blank=True, default='', help_text='ItemClass', max_length=32)),
                ('genderspecific', models.IntegerField(default=0, help_text='GenderSpecific')),
                ('part1envmap', models.IntegerField(default=0, help_text='Part1EnvMap')),
                ('part2envmap', models.IntegerField(default=0, help_text='Part2EnvMap')),
                ('part3envmap', models.IntegerField(default=0, help_text='Part3EnvMap')),
                ('defaultmodel', models.CharField(blank=True, default='', help_text='DefaultModel', max_length=32)),
                ('nwn2_defaulticon', models.IntegerField(default=0, help_text='NWN2_DefaultIcon')),
                ('defaulticon', models.CharField(blank=True, default='', help_text='DefaultIcon', max_length=64)),
                ('container', models.IntegerField(default=0, help_text='Container')),
                ('weaponwield', models.IntegerField(default=0, help_text='WeaponWield')),
                ('weapontype', models.IntegerField(default=0, help_text='WeaponType')),
                ('weaponsize', models.IntegerField(default=0, help_text='WeaponSize')),
                ('rangedweapon', models.IntegerField(default=0, help_text='RangedWeapon')),
                ('prefattackdist', models.FloatField(default=0.0, help_text='PrefAttackDist')),
                ('minrange', models.IntegerField(default=0, help_text='MinRange')),
                ('maxrange', models.IntegerField(default=0, help_text='MaxRange')),
                ('numdice', models.IntegerField(default=0, help_text='NumDice')),
                ('dietoroll', models.IntegerField(default=0, help_text='DieToRoll')),
                ('critthreat', models.IntegerField(default=0, help_text='CritThreat')),
                ('crithitmult', models.IntegerField(default=0, help_text='CritHitMult')),
                ('category', models.IntegerField(default=0, help_text='Category')),
                ('basecost', models.IntegerField(default=0, help_text='BaseCost')),
                ('stacking', models.IntegerField(default=0, help_text='Stacking')),
                ('itemmultiplier', models.IntegerField(default=0, help_text='ItemMultiplier')),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('invsoundtype', models.IntegerField(default=0, help_text='InvSoundType')),
                ('maxprops', models.IntegerField(default=0, help_text='MaxProps')),
                ('minprops', models.IntegerField(default=0, help_text='MinProps')),
                ('propcolumn', models.IntegerField(default=0, help_text='PropColumn')),
                ('storepanel', models.IntegerField(default=0, help_text='StorePanel')),
                ('reqfeat0', models.IntegerField(default=0, help_text='ReqFeat0')),
                ('reqfeat1', models.IntegerField(default=0, help_text='ReqFeat1')),
                ('reqfeat2', models.IntegerField(default=0, help_text='ReqFeat2')),
                ('reqfeat3', models.IntegerField(default=0, help_text='ReqFeat3')),
                ('reqfeat4', models.IntegerField(default=0, help_text='ReqFeat4')),
                ('reqfeat5', models.CharField(blank=True, default='', help_text='ReqFeat5', max_length=64)),
                ('ac_enchant', models.IntegerField(default=0, help_text='AC_Enchant')),
                ('base_ac', models.IntegerField(default=0, help_text='BaseAC')),
                ('armorcheckpen', models.IntegerField(default=0, help_text='ArmorCheckPen')),
                ('baseitemstatref', models.IntegerField(default=0, help_text='BaseItemStatRef')),
                ('chargesstarting', models.IntegerField(default=0, help_text='ChargesStarting')),
                ('rotateonground', models.IntegerField(default=0, help_text='RotateOnGround')),
                ('tenthlbs', models.IntegerField(default=0, help_text='TenthLBS')),
                ('weaponmattype', models.IntegerField(default=0, help_text='WeaponMatType')),
                ('ammunitiontype', models.IntegerField(default=0, help_text='AmmunitionType')),
                ('qbbehaviour', models.CharField(blank=True, default='', help_text='QBBehaviour', max_length=64)),
                ('arcanespellfailure', models.CharField(blank=True, default='', help_text='ArcaneSpellFailure', max_length=64)),
                ('percent_animslashl', models.IntegerField(default=0, help_text='%AnimSlashL')),
                ('percent_animslashr', models.IntegerField(default=0, help_text='%AnimSlashR')),
                ('percent_animslashs', models.IntegerField(default=0, help_text='%AnimSlashS')),
                ('storepanelsort', models.IntegerField(default=0, help_text='StorePanelSort')),
                ('ilrstacksize', models.IntegerField(default=0, help_text='ILRStackSize')),
                ('featimprcrit', models.IntegerField(default=0, help_text='FEATImprCrit')),
                ('featwpnfocus', models.IntegerField(default=0, help_text='FEATWpnFocus')),
                ('featwpnspec', models.IntegerField(default=0, help_text='FEATWpnSpec')),
                ('featepicdevcrit', models.BooleanField(default=False, help_text='FEATEpicDevCrit')),
                ('featepicwpnfocus', models.BooleanField(default=False, help_text='FEATEpicWpnFocus')),
                ('featepicwpnspec', models.BooleanField(default=False, help_text='FEATEpicWpnSpec')),
                ('featoverwhcrit', models.IntegerField(default=0, help_text='FEATOverWhCrit')),
                ('featwpnofchoice', models.IntegerField(default=0, help_text='FEATWpnOfChoice')),
                ('featgrtrwpnfocus', models.IntegerField(default=0, help_text='FEATGrtrWpnFocus')),
                ('featgrtrwpnspec', models.IntegerField(default=0, help_text='FEATGrtrWpnSpec')),
                ('featpowercrit', models.IntegerField(default=0, help_text='FEATPowerCrit')),
                ('gmaterialtype', models.IntegerField(default=0, help_text='GMaterialType')),
                ('baseitemsortorder', models.IntegerField(default=0, help_text='BaseItemSortOrder')),
            ],
            options={
                'verbose_name': 'BaseItem',
                'verbose_name_plural': 'BaseItems',
                'db_table': 'gamedata_baseitems',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.CharField(blank=True, default='', help_text='Name', max_length=34)),
                ('first_save', models.IntegerField(default=0, help_text='First_Save')),
                ('subs_save', models.IntegerField(default=0, help_text='Subs_Save')),
                ('incu_hours', models.IntegerField(default=0, help_text='Incu_Hours')),
                ('dice_1', models.IntegerField(default=0, help_text='Dice_1')),
                ('dam_1', models.IntegerField(default=0, help_text='Dam_1')),
                ('type_1', models.IntegerField(default=0, help_text='Type_1')),
                ('dice_2', models.IntegerField(default=0, help_text='Dice_2')),
                ('dam_2', models.IntegerField(default=0, help_text='Dam_2')),
                ('type_2', models.IntegerField(default=0, help_text='Type_2')),
                ('dice_3', models.IntegerField(default=0, help_text='Dice_3')),
                ('dam_3', models.CharField(blank=True, default='', help_text='Dam_3', max_length=64)),
                ('type_3', models.CharField(blank=True, default='', help_text='Type_3', max_length=64)),
                ('type', models.CharField(blank=True, default='', help_text='Type', max_length=64)),
                ('end_incu_script', models.CharField(blank=True, default='', help_text='End_Incu_Script', max_length=32)),
                ('field_24_hour_script', models.CharField(blank=True, default='', help_text='24_Hour_Script', max_length=64)),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'db_table': 'gamedata_disease',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('icon', models.CharField(blank=True, default='', help_text='Icon', max_length=32)),
                ('level_1', models.IntegerField(default=0, help_text='Level_1')),
                ('level_2', models.IntegerField(default=0, help_text='Level_2')),
                ('level_3', models.IntegerField(default=0, help_text='Level_3')),
                ('level_4', models.IntegerField(default=0, help_text='Level_4')),
                ('level_5', models.IntegerField(default=0, help_text='Level_5')),
                ('level_6', models.IntegerField(default=0, help_text='Level_6')),
                ('level_7', models.CharField(blank=True, default='', help_text='Level_7', max_length=64)),
                ('level_8', models.CharField(blank=True, default='', help_text='Level_8', max_length=64)),
                ('level_9', models.IntegerField(default=0, help_text='Level_9')),
                ('grantedfeat', models.IntegerField(default=0, help_text='GrantedFeat')),
                ('castablefeat', models.IntegerField(default=0, help_text='CastableFeat')),
                ('epithetfeat', models.IntegerField(default=0, help_text='EpithetFeat')),
            ],
            options={
                'verbose_name': 'Domain',
                'verbose_name_plural': 'Domains',
                'db_table': 'gamedata_domains',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Feat',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('feat', models.IntegerField(default=0, help_text='FEAT')),
                ('description', models.IntegerField(default=0, help_text='DESCRIPTION')),
                ('icon', models.CharField(blank=True, default='', help_text='ICON', max_length=32)),
                ('minattackbonus', models.IntegerField(default=0, help_text='MINATTACKBONUS')),
                ('minstr', models.IntegerField(default=0, help_text='MINSTR')),
                ('mindex', models.IntegerField(default=0, help_text='MINDEX')),
                ('minint', models.IntegerField(default=0, help_text='MININT')),
                ('minwis', models.CharField(blank=True, default='', help_text='MINWIS', max_length=64)),
                ('mincon', models.CharField(blank=True, default='', help_text='MINCON', max_length=64)),
                ('mincha', models.CharField(blank=True, default='', help_text='MINCHA', max_length=64)),
                ('maxstr', models.CharField(blank=True, default='', help_text='MAXSTR', max_length=64)),
                ('maxdex', models.CharField(blank=True, default='', help_text='MAXDEX', max_length=64)),
                ('maxint', models.CharField(blank=True, default='', help_text='MAXINT', max_length=64)),
                ('maxwis', models.CharField(blank=True, default='', help_text='MAXWIS', max_length=64)),
                ('maxcon', models.CharField(blank=True, default='', help_text='MAXCON', max_length=64)),
                ('maxcha', models.CharField(blank=True, default='', help_text='MAXCHA', max_length=64)),
                ('minspelllvl', models.IntegerField(default=0, help_text='MINSPELLLVL')),
                ('mincasterlvl', models.CharField(blank=True, default='', help_text='MINCASTERLVL', max_length=64)),
                ('prereq_feat1', models.IntegerField(default=0, help_text='PREREQFEAT1')),
                ('prereq_feat2', models.IntegerField(default=0, help_text='PREREQFEAT2')),
                ('gainmultiple', models.IntegerField(default=0, help_text='GAINMULTIPLE')),
                ('effectsstack', models.IntegerField(default=0, help_text='EFFECTSSTACK')),
                ('allclassescanuse', models.BooleanField(default=False, help_text='ALLCLASSESCANUSE')),
                ('category', models.IntegerField(default=0, help_text='CATEGORY')),
                ('maxcr', models.IntegerField(default=0, help_text='MAXCR')),
                ('spellid', models.CharField(blank=True, default='', help_text='SPELLID', max_length=64)),
                ('successor', models.IntegerField(default=0, help_text='SUCCESSOR')),
                ('crvalue', models.IntegerField(default=0, help_text='CRValue')),
                ('usesperday', models.CharField(blank=True, default='', help_text='USESPERDAY', max_length=64)),
                ('usesmapfeat', models.CharField(blank=True, default='', help_text='USESMAPFEAT', max_length=64)),
                ('masterfeat', models.CharField(blank=True, default='', help_text='MASTERFEAT', max_length=64)),
                ('targetself', models.CharField(blank=True, default='', help_text='TARGETSELF', max_length=64)),
                ('orreqfeat0', models.CharField(blank=True, default='', help_text='OrReqFeat0', max_length=64)),
                ('orreqfeat1', models.CharField(blank=True, default='', help_text='OrReqFeat1', max_length=64)),
                ('orreqfeat2', models.CharField(blank=True, default='', help_text='OrReqFeat2', max_length=64)),
                ('orreqfeat3', models.CharField(blank=True, default='', help_text='OrReqFeat3', max_length=64)),
                ('orreqfeat4', models.CharField(blank=True, default='', help_text='OrReqFeat4', max_length=64)),
                ('orreqfeat5', models.CharField(blank=True, default='', help_text='OrReqFeat5', max_length=64)),
                ('reqskill', models.CharField(blank=True, default='', help_text='REQSKILL', max_length=64)),
                ('reqskillmaxranks', models.CharField(blank=True, default='', help_text='ReqSkillMaxRanks', max_length=64)),
                ('reqskillminranks', models.CharField(blank=True, default='', help_text='ReqSkillMinRanks', max_length=64)),
                ('reqskill2', models.CharField(blank=True, default='', help_text='REQSKILL2', max_length=64)),
                ('reqskillmaxranks2', models.CharField(blank=True, default='', help_text='ReqSkillMaxRanks2', max_length=64)),
                ('reqskillminranks2', models.CharField(blank=True, default='', help_text='ReqSkillMinRanks2', max_length=64)),
                ('constant', models.CharField(blank=True, default='', help_text='Constant', max_length=56)),
                ('toolscategories', models.IntegerField(default=0, help_text='TOOLSCATEGORIES')),
                ('hostilefeat', models.IntegerField(default=0, help_text='HostileFeat')),
                ('min_level', models.CharField(blank=True, default='', help_text='MinLevel', max_length=64)),
                ('minlevelclass', models.CharField(blank=True, default='', help_text='MinLevelClass', max_length=64)),
                ('max_level', models.CharField(blank=True, default='', help_text='MaxLevel', max_length=64)),
                ('minfortsave', models.CharField(blank=True, default='', help_text='MinFortSave', max_length=64)),
                ('prereqepic', models.BooleanField(default=False, help_text='PreReqEpic')),
                ('featcategory', models.CharField(blank=True, default='', help_text='FeatCategory', max_length=36)),
                ('isactive', models.BooleanField(default=False, help_text='IsActive')),
                ('ispersistent', models.BooleanField(default=False, help_text='IsPersistent')),
                ('togglemode', models.CharField(blank=True, default='', help_text='ToggleMode', max_length=64)),
                ('cooldown', models.CharField(blank=True, default='', help_text='Cooldown', max_length=64)),
                ('dmfeat', models.IntegerField(default=0, help_text='DMFeat')),
                ('removed', models.IntegerField(default=0, help_text='REMOVED')),
                ('alignment_restrict', models.CharField(blank=True, default='', help_text='AlignRestrict', max_length=64)),
                ('immunitytype', models.CharField(blank=True, default='', help_text='ImmunityType', max_length=64)),
                ('instant', models.CharField(blank=True, default='', help_text='Instant', max_length=64)),
            ],
            options={
                'verbose_name': 'Feat',
                'verbose_name_plural': 'Feats',
                'db_table': 'gamedata_feat',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='GameClass',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('plural', models.IntegerField(default=0, help_text='Plural')),
                ('lower', models.IntegerField(default=0, help_text='Lower')),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('icon', models.CharField(blank=True, default='', help_text='Icon', max_length=32)),
                ('borderedicon', models.CharField(blank=True, default='', help_text='BorderedIcon', max_length=32)),
                ('hit_die', models.IntegerField(default=0, help_text='HitDie')),
                ('attack_bonus_table', models.CharField(blank=True, default='', help_text='AttackBonusTable', max_length=32)),
                ('featstable', models.CharField(blank=True, default='', help_text='FeatsTable', max_length=32)),
                ('saving_throw_table', models.CharField(blank=True, default='', help_text='SavingThrowTable', max_length=32)),
                ('skillstable', models.CharField(blank=True, default='', help_text='SkillsTable', max_length=32)),
                ('bonusfeatstable', models.CharField(blank=True, default='', help_text='BonusFeatsTable', max_length=32)),
                ('skill_points', models.IntegerField(default=0, help_text='SkillPointBase')),
                ('spellgaintable', models.CharField(blank=True, default='', help_text='SpellGainTable', max_length=32)),
                ('spellknowntable', models.CharField(blank=True, default='', help_text='SpellKnownTable', max_length=32)),
                ('is_player_class', models.BooleanField(default=False, help_text='PlayerClass')),
                ('is_spellcaster', models.IntegerField(default=0, help_text='SpellCaster')),
                ('metamagicallowed', models.IntegerField(default=0, help_text='MetaMagicAllowed')),
                ('memorizesspells', models.IntegerField(default=0, help_text='MemorizesSpells')),
                ('hasarcane', models.BooleanField(default=False, help_text='HasArcane')),
                ('hasdivine', models.BooleanField(default=False, help_text='HasDivine')),
                ('hasspontaneousspells', models.BooleanField(default=False, help_text='HasSpontaneousSpells')),
                ('spontaneousconversiontable', models.CharField(blank=True, default='', help_text='SpontaneousConversionTable', max_length=32)),
                ('spellswapminlvl', models.IntegerField(default=0, help_text='SpellSwapMinLvl')),
                ('spellswaplvlinterval', models.IntegerField(default=0, help_text='SpellSwapLvlInterval')),
                ('spellswaplvldiff', models.IntegerField(default=0, help_text='SpellSwapLvlDiff')),
                ('allspellsknown', models.IntegerField(default=0, help_text='AllSpellsKnown')),
                ('hasinfinitespells', models.BooleanField(default=False, help_text='HasInfiniteSpells')),
                ('hasdomains', models.BooleanField(default=False, help_text='HasDomains')),
                ('hasschool', models.BooleanField(default=False, help_text='HasSchool')),
                ('hasfamiliar', models.BooleanField(default=False, help_text='HasFamiliar')),
                ('hasanimalcompanion', models.BooleanField(default=False, help_text='HasAnimalCompanion')),
                ('str', models.IntegerField(default=0, help_text='Str')),
                ('dex', models.IntegerField(default=0, help_text='Dex')),
                ('con', models.IntegerField(default=0, help_text='Con')),
                ('wis', models.BooleanField(default=False, help_text='Wis')),
                ('int', models.IntegerField(default=0, help_text='Int')),
                ('cha', models.IntegerField(default=0, help_text='Cha')),
                ('primary_ability', models.CharField(blank=True, default='', help_text='PrimaryAbil', max_length=32)),
                ('spell_ability', models.CharField(blank=True, default='', help_text='SpellAbil', max_length=32)),
                ('alignment_restrict', models.CharField(blank=True, default='', help_text='AlignRestrict', max_length=32)),
                ('alignrstrcttype', models.CharField(blank=True, default='', help_text='AlignRstrctType', max_length=32)),
                ('invertrestrict', models.IntegerField(default=0, help_text='InvertRestrict')),
                ('constant', models.CharField(blank=True, default='', help_text='Constant', max_length=40)),
                ('effcrlvl01', models.IntegerField(default=0, help_text='EffCRLvl01')),
                ('effcrlvl02', models.IntegerField(default=0, help_text='EffCRLvl02')),
                ('effcrlvl03', models.IntegerField(default=0, help_text='EffCRLvl03')),
                ('effcrlvl04', models.IntegerField(default=0, help_text='EffCRLvl04')),
                ('effcrlvl05', models.IntegerField(default=0, help_text='EffCRLvl05')),
                ('effcrlvl06', models.IntegerField(default=0, help_text='EffCRLvl06')),
                ('effcrlvl07', models.IntegerField(default=0, help_text='EffCRLvl07')),
                ('effcrlvl08', models.IntegerField(default=0, help_text='EffCRLvl08')),
                ('effcrlvl09', models.IntegerField(default=0, help_text='EffCRLvl09')),
                ('effcrlvl10', models.IntegerField(default=0, help_text='EffCRLvl10')),
                ('effcrlvl11', models.IntegerField(default=0, help_text='EffCRLvl11')),
                ('effcrlvl12', models.IntegerField(default=0, help_text='EffCRLvl12')),
                ('effcrlvl13', models.IntegerField(default=0, help_text='EffCRLvl13')),
                ('effcrlvl14', models.IntegerField(default=0, help_text='EffCRLvl14')),
                ('effcrlvl15', models.IntegerField(default=0, help_text='EffCRLvl15')),
                ('effcrlvl16', models.IntegerField(default=0, help_text='EffCRLvl16')),
                ('effcrlvl17', models.IntegerField(default=0, help_text='EffCRLvl17')),
                ('effcrlvl18', models.IntegerField(default=0, help_text='EffCRLvl18')),
                ('effcrlvl19', models.IntegerField(default=0, help_text='EffCRLvl19')),
                ('effcrlvl20', models.IntegerField(default=0, help_text='EffCRLvl20')),
                ('prereqtable', models.CharField(blank=True, default='', help_text='PreReqTable', max_length=64)),
                ('max_level', models.IntegerField(default=0, help_text='MaxLevel')),
                ('xppenalty', models.IntegerField(default=0, help_text='XPPenalty')),
                ('bonusspellcasterleveltable', models.CharField(blank=True, default='', help_text='BonusSpellcasterLevelTable', max_length=64)),
                ('bonuscasterfeatbyclassmap', models.CharField(blank=True, default='', help_text='BonusCasterFeatByClassMap', max_length=64)),
                ('arcspelllvlmod', models.IntegerField(default=0, help_text='ArcSpellLvlMod')),
                ('divspelllvlmod', models.IntegerField(default=0, help_text='DivSpellLvlMod')),
                ('epiclevel', models.BooleanField(default=False, help_text='EpicLevel')),
                ('package', models.IntegerField(default=0, help_text='Package')),
                ('featpracticedspellcaster', models.IntegerField(default=0, help_text='FEATPracticedSpellcaster')),
                ('featextraslot', models.IntegerField(default=0, help_text='FEATExtraSlot')),
                ('featarmoredcaster', models.IntegerField(default=0, help_text='FEATArmoredCaster')),
                ('favoredweaponproficiency', models.IntegerField(default=0, help_text='FavoredWeaponProficiency')),
                ('favoredweaponfocus', models.IntegerField(default=0, help_text='FavoredWeaponFocus')),
                ('favoredweaponspecialization', models.IntegerField(default=0, help_text='FavoredWeaponSpecialization')),
                ('chargen_chest', models.CharField(blank=True, default='', help_text='CharGen_Chest', max_length=32)),
                ('chargen_feet', models.CharField(blank=True, default='', help_text='CharGen_Feet', max_length=64)),
                ('chargen_hands', models.CharField(blank=True, default='', help_text='CharGen_Hands', max_length=64)),
                ('chargen_cloak', models.CharField(blank=True, default='', help_text='CharGen_Cloak', max_length=64)),
                ('chargen_head', models.CharField(blank=True, default='', help_text='CharGen_Head', max_length=64)),
            ],
            options={
                'verbose_name': 'GameClass',
                'verbose_name_plural': 'GameClasss',
                'db_table': 'gamedata_classes',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Poison',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.CharField(blank=True, default='', help_text='Name', max_length=44)),
                ('save_dc', models.IntegerField(default=0, help_text='Save_DC')),
                ('handle_dc', models.IntegerField(default=0, help_text='Handle_DC')),
                ('dice_1', models.IntegerField(default=0, help_text='Dice_1')),
                ('dam_1', models.IntegerField(default=0, help_text='Dam_1')),
                ('default_1', models.IntegerField(default=0, help_text='Default_1')),
                ('script_1', models.CharField(blank=True, default='', help_text='Script_1', max_length=32)),
                ('dice_2', models.CharField(blank=True, default='', help_text='Dice_2', max_length=64)),
                ('dam_2', models.IntegerField(default=0, help_text='Dam_2')),
                ('default_2', models.IntegerField(default=0, help_text='Default_2')),
                ('script_2', models.CharField(blank=True, default='', help_text='Script_2', max_length=32)),
                ('cost', models.CharField(blank=True, default='', help_text='Cost', max_length=32)),
                ('onhitapplied', models.FloatField(default=0.0, help_text='OnHitApplied')),
                ('vfx_impact', models.IntegerField(default=0, help_text='VFX_Impact')),
            ],
            options={
                'verbose_name': 'Poison',
                'verbose_name_plural': 'Poisons',
                'db_table': 'gamedata_poison',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('abrev', models.CharField(blank=True, default='', help_text='Abrev', max_length=32)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('nameplural', models.IntegerField(default=0, help_text='NamePlural')),
                ('namelower', models.IntegerField(default=0, help_text='NameLower')),
                ('namelowerplural', models.IntegerField(default=0, help_text='NameLowerPlural')),
                ('convername', models.IntegerField(default=0, help_text='ConverName')),
                ('convernamelower', models.IntegerField(default=0, help_text='ConverNameLower')),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('appearance', models.CharField(blank=True, default='', help_text='Appearance', max_length=64)),
                ('str_adjust', models.IntegerField(default=0, help_text='StrAdjust')),
                ('dex_adjust', models.IntegerField(default=0, help_text='DexAdjust')),
                ('int_adjust', models.IntegerField(default=0, help_text='IntAdjust')),
                ('cha_adjust', models.IntegerField(default=0, help_text='ChaAdjust')),
                ('wis_adjust', models.BooleanField(default=False, help_text='WisAdjust')),
                ('con_adjust', models.IntegerField(default=0, help_text='ConAdjust')),
                ('endurance', models.IntegerField(default=0, help_text='Endurance')),
                ('favored', models.IntegerField(default=0, help_text='Favored')),
                ('featstable', models.CharField(blank=True, default='', help_text='FeatsTable', max_length=32)),
                ('biography', models.IntegerField(default=0, help_text='Biography')),
                ('playerrace', models.IntegerField(default=0, help_text='PlayerRace')),
                ('constant', models.CharField(blank=True, default='', help_text='Constant', max_length=34)),
                ('age', models.IntegerField(default=0, help_text='AGE')),
                ('crmodifier', models.FloatField(default=0.0, help_text='CRModifier')),
                ('ishumanoid', models.BooleanField(default=False, help_text='IsHumanoid')),
                ('defaultsubrace', models.IntegerField(default=0, help_text='DefaultSubRace')),
                ('female_race_icon', models.CharField(blank=True, default='', help_text='female_race_icon', max_length=32)),
                ('male_race_icon', models.CharField(blank=True, default='', help_text='male_race_icon', max_length=32)),
                ('featfavoredenemy', models.IntegerField(default=0, help_text='FEATFavoredEnemy')),
                ('featimprovedfavoredenemy', models.IntegerField(default=0, help_text='FEATImprovedFavoredEnemy')),
                ('featfavoredpowerattack', models.IntegerField(default=0, help_text='FEATFavoredPowerAttack')),
                ('featignorecritimmunity', models.IntegerField(default=0, help_text='FEATIgnoreCritImmunity')),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
                'db_table': 'gamedata_racialtypes',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.CharField(blank=True, default='', help_text='Name', max_length=32)),
                ('description', models.CharField(blank=True, default='', help_text='Description', max_length=32)),
                ('icon', models.CharField(blank=True, default='', help_text='Icon', max_length=32)),
                ('untrained', models.BooleanField(default=False, help_text='Untrained')),
                ('key_ability', models.CharField(blank=True, default='', help_text='KeyAbility', max_length=32)),
                ('armor_check_penalty', models.IntegerField(default=0, help_text='ArmorCheckPenalty')),
                ('allclassescanuse', models.BooleanField(default=False, help_text='AllClassesCanUse')),
                ('category', models.CharField(blank=True, default='', help_text='Category', max_length=64)),
                ('maxcr', models.IntegerField(default=0, help_text='MaxCR')),
                ('constant', models.CharField(blank=True, default='', help_text='Constant', max_length=40)),
                ('hostileskill', models.IntegerField(default=0, help_text='HostileSkill')),
                ('cosmopolitanfeat', models.IntegerField(default=0, help_text='CosmopolitanFeat')),
                ('isanactiveskill', models.BooleanField(default=False, help_text='IsAnActiveSkill')),
                ('togglemode', models.IntegerField(default=0, help_text='ToggleMode')),
                ('playeronly', models.IntegerField(default=0, help_text='PlayerOnly')),
                ('removed', models.IntegerField(default=0, help_text='REMOVED')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'db_table': 'gamedata_skills',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('iconresref', models.CharField(blank=True, default='', help_text='IconResRef', max_length=32)),
                ('school', models.CharField(blank=True, default='', help_text='School', max_length=32)),
                ('range', models.CharField(blank=True, default='', help_text='Range', max_length=32)),
                ('vs', models.CharField(blank=True, default='', help_text='VS', max_length=32)),
                ('metamagic', models.CharField(blank=True, default='', help_text='MetaMagic', max_length=32)),
                ('targettype', models.CharField(blank=True, default='', help_text='TargetType', max_length=32)),
                ('impactscript', models.CharField(blank=True, default='', help_text='ImpactScript', max_length=32)),
                ('bard', models.IntegerField(default=0, help_text='Bard')),
                ('cleric', models.IntegerField(default=0, help_text='Cleric')),
                ('druid', models.IntegerField(default=0, help_text='Druid')),
                ('paladin', models.IntegerField(default=0, help_text='Paladin')),
                ('ranger', models.IntegerField(default=0, help_text='Ranger')),
                ('wiz_sorc', models.IntegerField(default=0, help_text='Wiz_Sorc')),
                ('warlock', models.CharField(blank=True, default='', help_text='Warlock', max_length=64)),
                ('innate', models.IntegerField(default=0, help_text='Innate')),
                ('conjtime', models.IntegerField(default=0, help_text='ConjTime')),
                ('conjanim', models.CharField(blank=True, default='', help_text='ConjAnim', max_length=32)),
                ('conjvisual0', models.CharField(blank=True, default='', help_text='ConjVisual0', max_length=52)),
                ('lowconjvisual0', models.CharField(blank=True, default='', help_text='LowConjVisual0', max_length=40)),
                ('conjvisual1', models.CharField(blank=True, default='', help_text='ConjVisual1', max_length=64)),
                ('conjvisual2', models.CharField(blank=True, default='', help_text='ConjVisual2', max_length=64)),
                ('conjsoundvfx', models.CharField(blank=True, default='', help_text='ConjSoundVFX', max_length=64)),
                ('conjsoundmale', models.CharField(blank=True, default='', help_text='ConjSoundMale', max_length=32)),
                ('conjsoundfemale', models.CharField(blank=True, default='', help_text='ConjSoundFemale', max_length=32)),
                ('conjsoundoverride', models.CharField(blank=True, default='', help_text='ConjSoundOverride', max_length=64)),
                ('castanim', models.CharField(blank=True, default='', help_text='CastAnim', max_length=32)),
                ('cast_time', models.IntegerField(default=0, help_text='CastTime')),
                ('castvisual0', models.CharField(blank=True, default='', help_text='CastVisual0', max_length=46)),
                ('lowcastvisual0', models.CharField(blank=True, default='', help_text='LowCastVisual0', max_length=46)),
                ('castvisual1', models.CharField(blank=True, default='', help_text='CastVisual1', max_length=64)),
                ('castvisual2', models.CharField(blank=True, default='', help_text='CastVisual2', max_length=64)),
                ('castsound', models.CharField(blank=True, default='', help_text='CastSound', max_length=64)),
                ('proj', models.IntegerField(default=0, help_text='Proj')),
                ('projmodel', models.CharField(blank=True, default='', help_text='ProjModel', max_length=64)),
                ('projsef', models.CharField(blank=True, default='', help_text='ProjSEF', max_length=48)),
                ('lowprojsef', models.CharField(blank=True, default='', help_text='LowProjSEF', max_length=48)),
                ('projtype', models.CharField(blank=True, default='', help_text='ProjType', max_length=32)),
                ('projspwnpoint', models.CharField(blank=True, default='', help_text='ProjSpwnPoint', max_length=32)),
                ('projsound', models.CharField(blank=True, default='', help_text='ProjSound', max_length=64)),
                ('projorientation', models.CharField(blank=True, default='', help_text='ProjOrientation', max_length=32)),
                ('impactsef', models.CharField(blank=True, default='', help_text='ImpactSEF', max_length=44)),
                ('lowimpactsef', models.CharField(blank=True, default='', help_text='LowImpactSEF', max_length=44)),
                ('immunitytype', models.CharField(blank=True, default='', help_text='ImmunityType', max_length=32)),
                ('itemimmunity', models.IntegerField(default=0, help_text='ItemImmunity')),
                ('subradspell1', models.IntegerField(default=0, help_text='SubRadSpell1')),
                ('subradspell2', models.IntegerField(default=0, help_text='SubRadSpell2')),
                ('subradspell3', models.CharField(blank=True, default='', help_text='SubRadSpell3', max_length=64)),
                ('subradspell4', models.CharField(blank=True, default='', help_text='SubRadSpell4', max_length=64)),
                ('subradspell5', models.CharField(blank=True, default='', help_text='SubRadSpell5', max_length=64)),
                ('category', models.IntegerField(default=0, help_text='Category')),
                ('master', models.CharField(blank=True, default='', help_text='Master', max_length=64)),
                ('usertype', models.IntegerField(default=0, help_text='UserType')),
                ('spelldesc', models.IntegerField(default=0, help_text='SpellDesc')),
                ('useconcentration', models.IntegerField(default=0, help_text='UseConcentration')),
                ('spontaneouslycast', models.IntegerField(default=0, help_text='SpontaneouslyCast')),
                ('spontcastclassreq', models.IntegerField(default=0, help_text='SpontCastClassReq')),
                ('altmessage', models.CharField(blank=True, default='', help_text='AltMessage', max_length=64)),
                ('hostilesetting', models.IntegerField(default=0, help_text='HostileSetting')),
                ('featid', models.CharField(blank=True, default='', help_text='FeatID', max_length=64)),
                ('counter1', models.IntegerField(default=0, help_text='Counter1')),
                ('counter2', models.CharField(blank=True, default='', help_text='Counter2', max_length=64)),
                ('hasprojectile', models.BooleanField(default=False, help_text='HasProjectile')),
                ('asmetamagic', models.CharField(blank=True, default='', help_text='AsMetaMagic', max_length=64)),
                ('targetingui', models.IntegerField(default=0, help_text='TargetingUI')),
                ('castableondead', models.IntegerField(default=0, help_text='CastableOnDead')),
                ('removed', models.IntegerField(default=0, help_text='REMOVED')),
            ],
            options={
                'verbose_name': 'Spell',
                'verbose_name_plural': 'Spells',
                'db_table': 'gamedata_spells',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='SpellSchool',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('letter', models.CharField(blank=True, default='', help_text='Letter', max_length=32)),
                ('stringref', models.CharField(blank=True, default='', help_text='StringRef', max_length=32)),
                ('icon', models.IntegerField(default=0, help_text='Icon')),
                ('opposition', models.CharField(blank=True, default='', help_text='Opposition', max_length=32)),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('secondopposition', models.IntegerField(default=0, help_text='SecondOpposition')),
            ],
            options={
                'verbose_name': 'SpellSchool',
                'verbose_name_plural': 'SpellSchools',
                'db_table': 'gamedata_spellschools',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='StartingPackage',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('name', models.CharField(blank=True, default='', help_text='Name', max_length=32)),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('classid', models.IntegerField(default=0, help_text='ClassID')),
                ('attribute', models.IntegerField(default=0, help_text='Attribute')),
                ('gold', models.CharField(blank=True, default='', help_text='Gold', max_length=32)),
                ('school', models.IntegerField(default=0, help_text='School')),
                ('domain1', models.IntegerField(default=0, help_text='Domain1')),
                ('domain2', models.IntegerField(default=0, help_text='Domain2')),
                ('associate', models.IntegerField(default=0, help_text='Associate')),
                ('spellpref2da', models.IntegerField(default=0, help_text='SpellPref2DA')),
                ('featpref2da', models.CharField(blank=True, default='', help_text='FeatPref2DA', max_length=32)),
                ('skillpref2da', models.CharField(blank=True, default='', help_text='SkillPref2DA', max_length=32)),
                ('equip2da', models.CharField(blank=True, default='', help_text='Equip2DA', max_length=32)),
                ('soundset', models.CharField(blank=True, default='', help_text='Soundset', max_length=32)),
                ('is_player_class', models.BooleanField(default=False, help_text='PlayerClass')),
            ],
            options={
                'verbose_name': 'StartingPackage',
                'verbose_name_plural': 'StartingPackages',
                'db_table': 'gamedata_packages',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='Subrace',
            fields=[
                ('row_id', models.IntegerField(help_text='2DA row index', primary_key=True, serialize=False)),
                ('label', models.CharField(db_index=True, help_text='2DA label', max_length=64)),
                ('baserace', models.IntegerField(default=0, help_text='BaseRace')),
                ('ecl', models.IntegerField(default=0, help_text='ECL')),
                ('abrev', models.CharField(blank=True, default='', help_text='Abrev', max_length=32)),
                ('name', models.IntegerField(default=0, help_text='Name')),
                ('nameplural', models.IntegerField(default=0, help_text='NamePlural')),
                ('namelower', models.IntegerField(default=0, help_text='NameLower')),
                ('namelowerplural', models.IntegerField(default=0, help_text='NameLowerPlural')),
                ('convername', models.IntegerField(default=0, help_text='ConverName')),
                ('convernamelower', models.IntegerField(default=0, help_text='ConverNameLower')),
                ('description', models.IntegerField(default=0, help_text='Description')),
                ('appearance', models.CharField(blank=True, default='', help_text='Appearance', max_length=64)),
                ('str_adjust', models.IntegerField(default=0, help_text='StrAdjust')),
                ('dex_adjust', models.IntegerField(default=0, help_text='DexAdjust')),
                ('int_adjust', models.IntegerField(default=0, help_text='IntAdjust')),
                ('cha_adjust', models.IntegerField(default=0, help_text='ChaAdjust')),
                ('wis_adjust', models.BooleanField(default=False, help_text='WisAdjust')),
                ('con_adjust', models.IntegerField(default=0, help_text='ConAdjust')),
                ('endurance', models.IntegerField(default=0, help_text='Endurance')),
                ('favored', models.IntegerField(default=0, help_text='Favored')),
                ('hasfavoredclass', models.BooleanField(default=False, help_text='HasFavoredClass')),
                ('featstable', models.CharField(blank=True, default='', help_text='FeatsTable', max_length=32)),
                ('biography', models.IntegerField(default=0, help_text='Biography')),
                ('playerrace', models.IntegerField(default=0, help_text='PlayerRace')),
                ('constant', models.CharField(blank=True, default='', help_text='Constant', max_length=54)),
                ('age', models.IntegerField(default=0, help_text='AGE')),
                ('crmodifier', models.IntegerField(default=0, help_text='CRModifier')),
                ('color2da', models.CharField(blank=True, default='', help_text='Color2DA', max_length=34)),
                ('appearanceindex', models.IntegerField(default=0, help_text='AppearanceIndex')),
                ('female_race_icon', models.CharField(blank=True, default='', help_text='female_race_icon', max_length=32)),
                ('male_race_icon', models.CharField(blank=True, default='', help_text='male_race_icon', max_length=32)),
                ('racial_banner', models.CharField(blank=True, default='', help_text='racial_banner', max_length=32)),
            ],
            options={
                'verbose_name': 'Subrace',
                'verbose_name_plural': 'Subraces',
                'db_table': 'gamedata_racialsubtypes',
                'ordering': ['row_id'],
            },
        ),
        migrations.CreateModel(
            name='BABProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=32, unique=True)),
                ('level', models.IntegerField()),
                ('bab', models.IntegerField()),
            ],
            options={
                'db_table': 'gamedata_bab_progression',
                'ordering': ['table_name', 'level'],
                'unique_together': {('table_name', 'level')},
            },
        ),
        migrations.CreateModel(
            name='ItemProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(max_length=64)),
                ('property_id', models.IntegerField()),
                ('name', models.CharField(max_length=128)),
                ('cost_table', models.IntegerField(default=0)),
                ('param_table', models.IntegerField(default=0)),
                ('game_str_ref', models.IntegerField(default=0)),
                ('description_str_ref', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'gamedata_item_property',
                'unique_together': {('property_type', 'property_id')},
            },
        ),
        migrations.CreateModel(
            name='SaveProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(db_index=True, max_length=64)),
                ('level', models.IntegerField()),
                ('fortitude', models.IntegerField(default=0)),
                ('reflex', models.IntegerField(default=0)),
                ('will', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'gamedata_save_progression',
                'ordering': ['table_name', 'level'],
                'unique_together': {('table_name', 'level')},
            },
        ),
        migrations.CreateModel(
            name='FeatPrerequisite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_ability_score', models.CharField(blank=True, max_length=3)),
                ('min_ability_value', models.IntegerField(default=0)),
                ('min_skill_rank', models.IntegerField(default=0)),
                ('min_bab', models.IntegerField(default=0)),
                ('min_level', models.IntegerField(default=1)),
                ('feat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prerequisites', to='gamedata.feat')),
                ('prerequisite_feat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='required_for', to='gamedata.feat')),
                ('min_skill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamedata.skill')),
            ],
            options={
                'db_table': 'gamedata_feat_prerequisite',
            },
        ),
        migrations.CreateModel(
            name='SpellProgression',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(db_index=True, max_length=64)),
                ('level', models.IntegerField()),
                ('spell_level_0', models.IntegerField(default=0)),
                ('spell_level_1', models.IntegerField(default=0)),
                ('spell_level_2', models.IntegerField(default=0)),
                ('spell_level_3', models.IntegerField(default=0)),
                ('spell_level_4', models.IntegerField(default=0)),
                ('spell_level_5', models.IntegerField(default=0)),
                ('spell_level_6', models.IntegerField(default=0)),
                ('spell_level_7', models.IntegerField(default=0)),
                ('spell_level_8', models.IntegerField(default=0)),
                ('spell_level_9', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'gamedata_spell_progression',
                'ordering': ['table_name', 'level'],
                'unique_together': {('table_name', 'level')},
            },
        ),
        migrations.CreateModel(
            name='ClassFeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(default=1)),
                ('feat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.feat')),
                ('game_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_feats', to='gamedata.gameclass')),
            ],
            options={
                'db_table': 'gamedata_class_feat',
                'unique_together': {('game_class', 'feat', 'level')},
            },
        ),
        migrations.CreateModel(
            name='ClassSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_skills', to='gamedata.gameclass')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.skill')),
            ],
            options={
                'db_table': 'gamedata_class_skill',
                'unique_together': {('game_class', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='SpellLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('game_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gameclass')),
                ('spell', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spell_levels', to='gamedata.spell')),
            ],
            options={
                'db_table': 'gamedata_spell_level',
                'unique_together': {('spell', 'game_class')},
            },
        ),
    ]
