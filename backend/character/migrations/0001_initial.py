# Generated by Django 5.0.1 on 2025-07-23 16:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('is_companion', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('age', models.IntegerField(default=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female')], default=0)),
                ('deity', models.CharField(blank=True, max_length=100)),
                ('race_id', models.IntegerField()),
                ('race_name', models.CharField(max_length=100)),
                ('subrace_id', models.IntegerField(blank=True, null=True)),
                ('subrace_name', models.CharField(blank=True, max_length=100)),
                ('law_chaos', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('good_evil', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('experience', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('character_level', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('strength', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('dexterity', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('constitution', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('intelligence', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('wisdom', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('charisma', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(50)])),
                ('hit_points', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('max_hit_points', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('armor_class', models.IntegerField(default=10)),
                ('fortitude_save', models.IntegerField(default=0)),
                ('reflex_save', models.IntegerField(default=0)),
                ('will_save', models.IntegerField(default=0)),
                ('gold', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('raw_data', models.JSONField(blank=True, default=dict)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='characters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_id', models.IntegerField()),
                ('class_name', models.CharField(max_length=100)),
                ('class_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('domain1_id', models.IntegerField(blank=True, null=True)),
                ('domain1_name', models.CharField(blank=True, max_length=100)),
                ('domain2_id', models.IntegerField(blank=True, null=True)),
                ('domain2_name', models.CharField(blank=True, max_length=100)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='character.character')),
            ],
            options={
                'verbose_name_plural': 'Character classes',
                'ordering': ['-class_level', 'class_name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterFeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feat_id', models.IntegerField()),
                ('feat_name', models.CharField(max_length=200)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feats', to='character.character')),
            ],
            options={
                'ordering': ['feat_name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_item_id', models.IntegerField()),
                ('base_item_name', models.CharField(max_length=200)),
                ('localized_name', models.CharField(blank=True, max_length=200)),
                ('stack_size', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('location', models.CharField(choices=[('INVENTORY', 'Inventory'), ('HEAD', 'Head'), ('CHEST', 'Chest'), ('BOOTS', 'Boots'), ('ARMS', 'Arms'), ('RIGHT_HAND', 'Right Hand'), ('LEFT_HAND', 'Left Hand'), ('CLOAK', 'Cloak'), ('LEFT_RING', 'Left Ring'), ('RIGHT_RING', 'Right Ring'), ('NECK', 'Neck'), ('BELT', 'Belt'), ('ARROWS', 'Arrows'), ('BULLETS', 'Bullets'), ('BOLTS', 'Bolts')], default='INVENTORY', max_length=20)),
                ('inventory_slot', models.IntegerField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, default=list)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='character.character')),
            ],
            options={
                'ordering': ['location', 'inventory_slot'],
            },
        ),
        migrations.CreateModel(
            name='CharacterSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_id', models.IntegerField()),
                ('skill_name', models.CharField(max_length=100)),
                ('rank', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='character.character')),
            ],
            options={
                'ordering': ['skill_name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterSpell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spell_id', models.IntegerField()),
                ('spell_name', models.CharField(max_length=200)),
                ('spell_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('class_index', models.IntegerField(default=0)),
                ('is_memorized', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spells', to='character.character')),
            ],
            options={
                'ordering': ['spell_level', 'spell_name'],
            },
        ),
        migrations.AddIndex(
            model_name='character',
            index=models.Index(fields=['owner', '-updated_at'], name='character_c_owner_i_21291e_idx'),
        ),
    ]
