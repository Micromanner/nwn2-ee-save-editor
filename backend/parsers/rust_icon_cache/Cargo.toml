[package]
name = "rust_icon_cache"
version = "0.1.0"
edition = "2021"
authors = ["NWN2 Enhanced Edition Editor Team"]
description = "High-performance Rust icon cache for NWN2 with persistent storage"
license = "MIT"

[lib]
name = "rust_icon_cache"
crate-type = ["cdylib", "rlib"]

[dependencies]
# Concurrent data structures
dashmap = "5.5"

# String interning for memory efficiency
lasso = { version = "0.7", features = ["serialize", "multi-threaded"] }

# Binary serialization for cache persistence
bincode = "1.3"

# Serialization support
serde = { version = "1.0", features = ["derive"] }

# Async runtime
tokio = { version = "1.35", features = ["full"] }

# Parallel processing
rayon = "1.8"

# Image processing
image = { version = "0.24", features = ["png", "jpeg", "webp", "tga"] }
ddsfile = "0.5"  # For reading DDS headers and data
texpresso = "2.0"  # For DXT/BC decompression (BC1-BC3)
image_dds = { version = "0.5", features = ["ddsfile", "image"] }  # For BC7 decompression

# Path handling
walkdir = "2.4"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Python bindings
pyo3 = { version = "0.20", features = ["extension-module", "abi3-py39"], optional = true }
pyo3-asyncio = { version = "0.20", features = ["tokio-runtime"], optional = true }
futures-util = "0.3"

# Fast hashing
ahash = "0.8"

# Logging
log = "0.4"
env_logger = "0.11"

# CPU detection for parallel processing
num_cpus = "1.16"

# File watching for cache invalidation (optional future feature)
notify = { version = "6.1", optional = true }

# Compression for cache files
flate2 = "1.0"

# UUID generation for unique temp filenames
uuid = { version = "1.6", features = ["v4"] }

# LRU cache for memory management
lru = "0.12"

# CRC32 for checksums
crc32fast = "1.3"

[dev-dependencies]
# Testing
tempfile = "3.8"
criterion = { version = "0.5", features = ["html_reports"] }
pretty_assertions = "1.4"

[features]
default = ["python-bindings", "multi-threaded"]
python-bindings = ["dep:pyo3", "dep:pyo3-asyncio"]
file-watching = ["dep:notify"]
multi-threaded = []

[profile.release]
# Maximum optimization for production
opt-level = 3
lto = true
codegen-units = 1
panic = "unwind"  # Important for Python integration
strip = false     # Keep symbols for better error messages

[profile.bench]
# Optimize for benchmarks
opt-level = 3
lto = true
codegen-units = 1
debug = true

